{
    "sourceFile": "app/Http/Controllers/Main/UsersController.php",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1705203336809,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1705203352943,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,8 +47,9 @@\n             'kelompok_id' => $request->kelompok_id,\n             'name' => $request->name,\n             'kode_pegawai' => $request->kode_pegawai,\n             'no_hp' => $request->no_hp,\n+            'email' => $request->email,\n             'password' => bcrypt($request->password),\n             'picture' => $request->picture->store('picture', 'public'),\n             'gender' => $request->gender,\n         ]);\n@@ -87,8 +88,9 @@\n         $post->jab_id = $request->input('jab_id');\n         $post->kelompok_id = $request->input('kelompok_id');\n         $post->kode_pegawai = $request->input('kode_pegawai');\n         $post->no_hp = $request->input('no_hp');\n+        $post->email = $request->input('email');\n         $post->gender = $request->input('gender');\n         $post->password = bcrypt($request->password);\n \n         // Periksa apakah ada dokumen yang diunggah\n"
                },
                {
                    "date": 1705759122940,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,8 @@\n             'kode_pegawai' => $request->kode_pegawai,\n             'no_hp' => $request->no_hp,\n             'email' => $request->email,\n             'password' => bcrypt($request->password),\n-            'picture' => $request->picture->store('picture', 'public'),\n             'gender' => $request->gender,\n         ]);\n         return redirect('main/user')->with('success', 'Data berhasil disimpan!');\n     }\n@@ -92,21 +91,8 @@\n         $post->email = $request->input('email');\n         $post->gender = $request->input('gender');\n         $post->password = bcrypt($request->password);\n \n-        // Periksa apakah ada dokumen yang diunggah\n-        if ($request->hasFile('picture')) {\n-            // Proses picture yang diunggah dan simpan di storage\n-            $picture = $request->file('picture')->store('picture', 'public');\n-\n-            // Hapus picture lama jika ada\n-            if ($post->picture && Storage::disk('public')->exists($post->picture)) {\n-                Storage::disk('public')->delete($post->picture);\n-            }\n-\n-            // Simpan nama file picture yang baru di database\n-            $post->picture = $picture;\n-        }\n         $post->save();\n \n         return redirect('main/user')->with('success', 'Data berhasil diubah!');\n     }\n"
                }
            ],
            "date": 1705203336809,
            "name": "Commit-0",
            "content": "<?php\n\nnamespace App\\Http\\Controllers\\Main;\n\nuse App\\Http\\Controllers\\Controller;\nuse App\\Models\\Jabatan;\nuse App\\Models\\Kelompok;\nuse App\\Models\\User;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Support\\Facades\\Storage;\n\nclass UsersController extends Controller\n{\n    /**\n     * Display a listing of the resource.\n     */\n    public function index()\n    {\n\n        $data['title'] = \"Data Pegawai\";\n        $user = User::with('jabatan', 'kelompok')->get();\n        $data['result'] = $user->sortDesc();\n        return view(\"main.user.index\", $data);\n    }\n\n    /**\n     * Show the form for creating a new resource.\n     */\n    public function create()\n    {\n\n        $data['jabatan'] = Jabatan::all();\n        $data['kelompok'] = Kelompok::all();\n        $data['kodePegawai'] = $this->generateUniqueCode('001', 8);\n        $data['title'] = \"Tambah Data Pegawai\";\n        return view(\"main.user.create\", $data);\n    }\n\n    /**\n     * Store a newly created resource in storage.\n     */\n    public function store(Request $request)\n    {\n        User::create([\n            'jab_id' => $request->jab_id,\n            'kelompok_id' => $request->kelompok_id,\n            'name' => $request->name,\n            'kode_pegawai' => $request->kode_pegawai,\n            'no_hp' => $request->no_hp,\n            'password' => bcrypt($request->password),\n            'picture' => $request->picture->store('picture', 'public'),\n            'gender' => $request->gender,\n        ]);\n        return redirect('main/user')->with('success', 'Data berhasil disimpan!');\n    }\n\n    /**\n     * Display the specified resource.\n     */\n    public function show(string $id)\n    {\n        $data['title'] = \"Lihat Data Pegawai\";\n        $data['result'] = User::with('jabatan', 'kelompok')->findOrFail($id);\n        return view(\"main.user.show\", $data);\n    }\n\n    /**\n     * Show the form for editing the specified resource.\n     */\n    public function edit(string $id)\n    {\n        $data['title'] = \"Edit Data Pegawai\";\n        $data['jabatan'] = Jabatan::all();\n        $data['kelompok'] = Kelompok::all();\n        $data['result'] = User::with('jabatan', 'kelompok')->findOrFail($id);\n        return view(\"main.user.edit\", $data);\n    }\n\n    /**\n     * Update the specified resource in storage.\n     */\n    public function update(Request $request, string $id)\n    {\n        $post = User::find($id);\n        $post->name = $request->input('name');\n        $post->jab_id = $request->input('jab_id');\n        $post->kelompok_id = $request->input('kelompok_id');\n        $post->kode_pegawai = $request->input('kode_pegawai');\n        $post->no_hp = $request->input('no_hp');\n        $post->gender = $request->input('gender');\n        $post->password = bcrypt($request->password);\n\n        // Periksa apakah ada dokumen yang diunggah\n        if ($request->hasFile('picture')) {\n            // Proses picture yang diunggah dan simpan di storage\n            $picture = $request->file('picture')->store('picture', 'public');\n\n            // Hapus picture lama jika ada\n            if ($post->picture && Storage::disk('public')->exists($post->picture)) {\n                Storage::disk('public')->delete($post->picture);\n            }\n\n            // Simpan nama file picture yang baru di database\n            $post->picture = $picture;\n        }\n        $post->save();\n\n        return redirect('main/user')->with('success', 'Data berhasil diubah!');\n    }\n\n    /**\n     * Remove the specified resource from storage.\n     */\n    public function destroy(string $id)\n    {\n        $user = User::findOrFail($id);\n        $user->delete();\n        return back()->with('hapus', 'Data sudah di Hapus!');\n    }\n\n    function generateUniqueCode($prefix = '', $length = 8)\n    {\n        // Menetapkan prefix ke kode (jika ada)\n        $code = $prefix;\n\n        // Menetapkan panjang sisa kode yang harus di-generate\n        $remainingLength = $length - strlen($prefix);\n\n        // Menghasilkan karakter random dengan panjang sisa kode\n        $randomPart = Str::random($remainingLength);\n\n        // Menggabungkan prefix dan karakter random untuk mendapatkan kode lengkap\n        $code .= $randomPart;\n\n        return $code;\n    }\n}\n"
        }
    ]
}