{
    "sourceFile": "app/Http/Controllers/Main/PeminjamanMobilController.php",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1705596349948,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1705596373969,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -107,9 +107,9 @@\n         return view('main.peminjaman_mobil.edit', [\n             'title' => 'Edit Data Pengajuan Peminjaman Mobil',\n             'user' => $user,\n             'id' => $row->id,\n-            'mobil_id' => $row->mobil_id,\n+            'nama' => $row->nama,\n             'mobil' => $mobil,\n             'kegiatan' => $row->kegiatan,\n             'jam_pinjam' => $row->jam_pinjam,\n             'jam_kembali' => $row->jam_kembali,\n"
                }
            ],
            "date": 1705596349948,
            "name": "Commit-0",
            "content": "<?php\n\nnamespace App\\Http\\Controllers\\Main;\n\nuse App\\Http\\Controllers\\Controller;\nuse App\\Models\\Mobil;\nuse App\\Models\\PeminjamanMobil;\nuse App\\Models\\User;\nuse Illuminate\\Http\\Request;\n\nclass PeminjamanMobilController extends Controller\n{\n    /**\n     * Display a listing of the resource.\n     */\n    public function index()\n    {\n        if ($user = auth()->user()->jab_id == 4) {\n            $user = auth()->user()->id;\n            $data['title'] = 'Data pengajuan peminjaman mobil';\n            $user = PeminjamanMobil::with('users', 'mobil')\n                ->where('user_id', $user)\n                ->get();\n            $data['result'] = $user->sortDesc();\n            return view('main.peminjaman_mobil.index', $data);\n        } else {\n            $data['title'] = 'Data pengajuan peminjaman mobil';\n            $user = PeminjamanMobil::with('users', 'mobil')\n                ->get();\n            $data['result'] = $user->sortDesc();\n            return view('main.peminjaman_mobil.index', $data);\n        }\n    }\n\n    /**\n     * Show the form for creating a new resource.\n     */\n    public function create()\n    {\n        $data['user'] = User::all();\n        $data['mobil'] = Mobil::all();\n        $data['jenis_kebutuhan'] = PeminjamanMobil::all();\n        $data['title'] = \"Tambah Data Peminjaman Mobil\";\n        return view(\"main.peminjaman_mobil.create\", $data);\n    }\n\n    /**\n     * Store a newly created resource in storage.\n     */\n    public function store(Request $request)\n    {\n        $validasi = $this->validate(\n            $request,\n            [\n                'user_id' => 'required',\n                'mobil_id' => 'required',\n                'kegiatan' => 'required',\n                'jam_pinjam' => 'required',\n                'jam_kembali' => 'required',\n                'tanggal_pinjam' => 'required',\n                'tanggal_kembali' => 'required',\n                'status' => 'required',\n\n            ],\n            [\n                'user_id.required' => 'user_id produk tidak boleh kosong',\n                'mobil_id.required' => 'mobil_id tidak boleh kosong',\n                'kegiatan.required' => 'kegiatan tidak boleh kosong',\n                'jam_pinjam.required' => 'jam_pinjam tidak boleh kosong',\n                'jam_kembali.required' => 'jam_kembali tidak boleh kosong',\n                'tanggal_pinjam.required' => 'tanggal_pinjam tidak boleh kosong',\n                'tanggal_kembali.required' => 'tanggal_kembali tidak boleh kosong',\n                'status.required' => 'status tidak boleh kosong',\n            ]\n        );\n\n        PeminjamanMobil::create([\n            'user_id' => $request->user_id,\n            'mobil_id' => $request->mobil_id,\n            'kegiatan' => $request->kegiatan,\n            'jam_pinjam' => $request->jam_pinjam,\n            'jam_kembali' => $request->jam_kembali,\n            'tanggal_pinjam' => $request->tanggal_pinjam,\n            'tanggal_kembali' => $request->tanggal_kembali,\n            'status' => $request->status,\n        ]);\n\n        return redirect('main/peminjaman_mobil')->with('success', 'Data berhasil disimpan!');\n    }\n\n    /**\n     * Display the specified resource.\n     */\n    public function show(string $id)\n    {\n        //\n    }\n\n    /**\n     * Show the form for editing the specified resource.\n     */\n    public function edit(string $id)\n    {\n        $row = PeminjamanMobil::findOrFail($id);\n        $user = User::all();\n        $mobil = Mobil::all();\n        return view('main.peminjaman_mobil.edit', [\n            'title' => 'Edit Data Pengajuan Peminjaman Mobil',\n            'user' => $user,\n            'id' => $row->id,\n            'mobil_id' => $row->mobil_id,\n            'mobil' => $mobil,\n            'kegiatan' => $row->kegiatan,\n            'jam_pinjam' => $row->jam_pinjam,\n            'jam_kembali' => $row->jam_kembali,\n            'tanggal_pinjam' => $row->tanggal_pinjam,\n            'tanggal_kembali' => $row->tanggal_kembali,\n            'status' => $row->status,\n        ]);\n    }\n\n    /**\n     * Update the specified resource in storage.\n     */\n    public function update(Request $request, string $id)\n    {\n        $row = PeminjamanMobil::find($id);\n        if ($row) {\n            $row->user_id = $request->user_id;\n            $row->mobil_id = $request->mobil_id;\n            $row->kegiatan = $request->kegiatan;\n            $row->jam_pinjam = $request->jam_pinjam;\n            $row->jam_kembali = $request->jam_kembali;\n            $row->tanggal_pinjam = $request->tanggal_pinjam;\n            $row->tanggal_kembali = $request->tanggal_kembali;\n            $row->status = $request->status;\n\n            $row->save();\n\n            return redirect('main/peminjaman_mobil')->with('success', 'Data berhasil diubah');\n        }\n    }\n\n    /**\n     * Remove the specified resource from storage.\n     */\n    public function destroy(string $id)\n    {\n        $data = PeminjamanMobil::findOrFail($id);\n\n        $data->delete();\n        return back()->with('hapus', 'Data sudah di Hapus!');\n    }\n}\n"
        }
    ]
}